{"version":3,"sources":["webpack:///../packages/web-app/dev-env.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","isMDXComponent"],"mappings":"ocAMO,IAAMA,EAAe,Q,6KAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,2FAEA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,wCAIL,iHAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,4RAML,yJAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gCAIL,yDAAwC,mBAAGA,WAAW,KAAQ,CAC1D,KAAQ,0GAD4B,0GAGxC,iBAAQ,CACN,GAAM,UADR,UAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,yGACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,kXAML,qFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+FAML,iBAAQ,CACN,GAAM,6CADR,6CAGA,sBACE,kBAAIA,WAAW,MAAf,kEAAuF,0BAAYA,WAAW,MAAvB,sBAAvF,8CAAqM,yBAAI,mBAAKC,IAAI,kCAAb,MACrM,kBAAID,WAAW,MAAf,iIAAsJ,yBAAI,mBAAKC,IAAI,2BAAb,MACtJ,kBAAID,WAAW,MAAf,iIAAsJ,0BAAYA,WAAW,MAAvB,gBAAtJ,IAAoN,yBAAI,mBAAKC,IAAI,2BAAb,MACpN,kBAAID,WAAW,MAAf,kEAAuF,yBAAI,mBAAKC,IAAI,yBAAb,Q,oKAM7FL,EAAWM,gBAAiB","file":"component---packages-web-app-dev-env-mdx-98b6c9122df4543ffd20.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/vasilis/BeDeve/fullstack-development/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"required-software\"\n    }}>{`Required software`}</h2>\n    <p>{`##TODO Style chromium section and add info for dev tools\nChromium`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`sudo apt install chromium-browser\n`}</code></pre>\n    <p>{`##Style nvm/node section and add info for nvm usage\n##fix bug with export\nNode and npm`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash\nexport NVM_DIR=\"$([ -z \"\\${XDG_CONFIG_HOME-}\" ] && printf %s \"\\${HOME}/.nvm\" || printf %s \"\\${XDG_CONFIG_HOME}/nvm\")\" [ -s \"$NVM_DIR/nvm.sh\" ] && \\\\. \"$NVM_DIR/nvm.sh\" # This loads nvm\nnvm install 8\n`}</code></pre>\n    <p>{`##TODO Style keepass and add info\n##add instructions with screenshots of creating password and using auto-type feature\nKeepass`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`sudo apt install keepassx\n`}</code></pre>\n    <p>{`use keepass for storing ssh keys `}<a parentName=\"p\" {...{\n        \"href\": \"https://julien.coubronne.net/en/2016/07/15/store-your-ssh-keys-in-keepass-and-use-them-with-keeagent/\"\n      }}>{`https://julien.coubronne.net/en/2016/07/15/store-your-ssh-keys-in-keepass-and-use-them-with-keeagent/`}</a></p>\n    <h3 {...{\n      \"id\": \"vscode\"\n    }}>{`VsCode`}</h3>\n    <h4 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h4>\n    <p>{`The repository and key can also be installed manually with the following script:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg\nsudo install -o root -g root -m 644 packages.microsoft.gpg /usr/share/keyrings/\nsudo sh -c 'echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main\" > /etc/apt/sources.list.d/vscode.list'\n`}</code></pre>\n    <p>{`Then update the package cache and install the package using:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`sudo apt-get install apt-transport-https\nsudo apt-get update\nsudo apt-get install code\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"instructions-for-using-git-through-vscode\"\n    }}>{`Instructions for using Git through VScode`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`After typing some code and save, click Source Control or press `}<inlineCode parentName=\"li\">{`<Ctrl + Shift + g>`}</inlineCode>{` or click the git menu item at the sidebar:`}<p> <img src=\"screenshots/sourcecontrol.png\" /> </p></li>\n      <li parentName=\"ol\">{`Instead of git adding from terminal, click the plus icon beside each file changed or the plus icon at the top to add them all:`}<p> <img src=\"screenshots/gitadd.png\" /> </p></li>\n      <li parentName=\"ol\">{`Instead of git commiting from terminal, type your commit message in the \"Message\" input box and click the check icon or press `}<inlineCode parentName=\"li\">{`<Ctrl+Enter>`}</inlineCode>{`:`}<p> <img src=\"screenshots/commit.png\" /> </p></li>\n      <li parentName=\"ol\">{`Publish branch, push, pull and more from the \"three dots\" icon:`}<p> <img src=\"screenshots/push.png\" /> </p></li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}