(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{964:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return b}));n(12),n(4),n(5),n(3),n(7),n(6),n(8),n(1);var r=n(77),a=n(955);function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/extensions/puppeteer-recorder/README.md"}});var c={_frontmatter:o},l=a.a;function b(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(r.b)(l,i({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"puppeteer-recorder"},"Puppeteer Recorder"),Object(r.b)("p",null,"Puppeteer recorder is a Chrome extension that records your browser interactions and generates a\n",Object(r.b)("a",i({parentName:"p"},{href:"https://github.com/GoogleChrome/puppeteer"}),"Puppeteer")," script. Install it from the ",Object(r.b)("a",i({parentName:"p"},{href:"https://chrome.google.com/webstore/detail/puppeteer-recorder/djeegiggegleadkkbgopoonhjimgehda"}),"Chrome Webstore"),".\nThis project is pretty fresh, but does the following already:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Records clicks and type events."),Object(r.b)("li",{parentName:"ul"},"Add waitForNavigation, setViewPort and other useful clauses. "),Object(r.b)("li",{parentName:"ul"},"Generates a Puppeteer script."),Object(r.b)("li",{parentName:"ul"},"Shows which events are being recorded."),Object(r.b)("li",{parentName:"ul"},"Copy to clipboard."),Object(r.b)("li",{parentName:"ul"},"Offers configuration options."),Object(r.b)("li",{parentName:"ul"},"Allows data-id configuration for element selection.")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Note: we only record certain events. See ",Object(r.b)("inlineCode",{parentName:"p"},"dom-events-to-record.js")," in the code-generator folder for which events. This collection will be expanded in future releases.")),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Click the icon and hit Record."),Object(r.b)("li",{parentName:"ul"},"Hit ",Object(r.b)("kbd",null,"tab")," after you finish typing in an ",Object(r.b)("inlineCode",{parentName:"li"},"input")," element."),Object(r.b)("li",{parentName:"ul"},"Click links, inputs and other elements."),Object(r.b)("li",{parentName:"ul"},"Wait for full page load on each navigation. "),Object(r.b)("li",{parentName:"ul"},"Click Pause when you want to navigate without recording anything. Hit Resume to continue recording. ")),Object(r.b)("h2",{id:"background"},"Background"),Object(r.b)("p",null,"Writing Puppeteer scripts for scraping, testing and monitoring can be tricky. A recorder / code generator can be helpful,\neven if the code isn't perfect. This project builds on other projects (see ",Object(r.b)("a",i({parentName:"p"},{href:"#user-content-credits--disclaimer"}),"disclaimer"),"\nbelow) but adds extensibility, configurability and a smoother UI."),Object(r.b)("h2",{id:"development"},"Development"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Run: ",Object(r.b)("inlineCode",{parentName:"li"},"git clone https://github.com/checkly/puppeteer-recorder.git")),Object(r.b)("li",{parentName:"ol"},"Build the project: ",Object(r.b)("inlineCode",{parentName:"li"},"cd puppeteer-recorder && npm i && npm run dev")),Object(r.b)("li",{parentName:"ol"},"Navigate to chrome://extensions"),Object(r.b)("li",{parentName:"ol"},"Make sure 'Developer mode' is checked"),Object(r.b)("li",{parentName:"ol"},"Click Load unpacked extension..."),Object(r.b)("li",{parentName:"ol"},"Browse to puppeteer-recorder/build and click Select")),Object(r.b)("h2",{id:"cutting-a-release"},"Cutting a Release"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"bump versions in ",Object(r.b)("inlineCode",{parentName:"li"},"package.json")," and ",Object(r.b)("inlineCode",{parentName:"li"},"manifest.json")),Object(r.b)("li",{parentName:"ul"},"tag the code with the version, i.e. ",Object(r.b)("inlineCode",{parentName:"li"},"git tag v0.4.0")),Object(r.b)("li",{parentName:"ul"},"push with tags ",Object(r.b)("inlineCode",{parentName:"li"},"git push --tags"))),Object(r.b)("p",null,"Now generate a release with ",Object(r.b)("strong",{parentName:"p"},"gren"),". Make sure all issues associated with the new version are linked to a milestone\nwith the name of the tag."),Object(r.b)("pre",null,Object(r.b)("code",i({parentName:"pre"},{}),'gren release --override --data-source=milestones --milestone-match="{{tag_name}}"\n')),Object(r.b)("h2",{id:"credits--disclaimer"},"Credits & disclaimer"),Object(r.b)("p",null,"Puppeteer recorder is the spiritual successor & love child of segment.io's\n",Object(r.b)("a",i({parentName:"p"},{href:"https://github.com/segmentio/daydream"}),"Daydream")," and ",Object(r.b)("a",i({parentName:"p"},{href:"https://github.com/yguan/ui-recorder"}),"ui recorder"),"."),Object(r.b)("h2",{id:"license"},"License"),Object(r.b)("p",null,"Apache 2"))}b&&b===Object(b)&&Object.isExtensible(b)&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/extensions/puppeteer-recorder/README.md"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-extensions-puppeteer-recorder-readme-md-1e69c4e9b726413d0031.js.map