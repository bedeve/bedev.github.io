(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{958:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return p}));a(12),a(4),a(5),a(3),a(7),a(6),a(8),a(1);var n=a(77),b=a(955);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/linux/index.mdx"}});var i={_frontmatter:c},l=b.a;function p(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,b={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,["components"]);return Object(n.b)(l,r({},i,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",{id:"run-linux-through-a-usb-stick"},"Run linux through a usb stick"),Object(n.b)("h3",{id:"create-a-custom-image"},"Create a custom image"),Object(n.b)("p",null,"Cubic is a custom Ubuntu ISO creator. With it you can take a standard Ubuntu ISO image,\ninstall all the third-party software you need, and then create a custom, bootable\n(and installable) image from that."),Object(n.b)("p",null,Object(n.b)("a",r({parentName:"p"},{href:"linux/install#cubic"}),"Install")),Object(n.b)("h3",{id:"make-a-pestistent-linux-usb-stick"},"Make a pestistent linux usb stick"),Object(n.b)("p",null,Object(n.b)("a",r({parentName:"p"},{href:"linux/install#mksub"}),"Install mkusb")),Object(n.b)("h3",{id:"change-boot-order-in-bios"},"Change boot order in BIOS"),Object(n.b)("p",null,"uefi/legacy\nboot startup options"),Object(n.b)("h2",{id:"basic-commands"},"Basic commands"),Object(n.b)("h3",{id:"filesystem"},"Filesystem"),Object(n.b)("h3",{id:"terminal-keyboard-shortcuts"},"Terminal Keyboard Shortcuts"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"<Alt + . >"),": use the previous argument "),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"<Ctrl + Shift + C>"),": copy the selected text "),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"<Ctrl + Shift + V>"),": paste the clipboard text "),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"<Ctrl + Shift + T>"),": open a new tabbed terminal in the same path")),Object(n.b)("h4",{id:"list-directory-contents"},"List directory contents"),Object(n.b)("p",null," ls "),Object(n.b)("h4",{id:"change-directory"},"Change directory"),Object(n.b)("p",null,"Command : "),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{})," cd <folder_name>\n")),Object(n.b)("p",null,"Examples:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"One folder back"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  cd ..\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Two folders back"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  cd ../..\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Previous directory"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  cd -\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"User root directory"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  cd ~\n")))),Object(n.b)("p",null,Object(n.b)("a",r({parentName:"p"},{href:"https://www.tecmint.com/cd-command-in-linux/"}),"More")),Object(n.b)("h4",{id:"create-new-file"},"Create new file"),Object(n.b)("p",null,"Command : "),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{}),"     touch  <fileName>\n")),Object(n.b)("p",null,"Usage instructions:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Create multiple files"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  touch <File1_name> <File2_name> <File3_name>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Change access time only"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  touch -a <fileName>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Check whether a file is created or not. If not created then don’t create it. This command avoids creating files."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  touch -c <fileName>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Update access and modification time"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  touch -c-d <fileName>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Change modification time only"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  touch -m <fileName>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Use the timestamp of another file"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  touch -r <second_file_name> <first_file_name>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Create a file using a specified time "),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  touch -t YYMMDDHHMM <fileName>\n")))),Object(n.b)("h4",{id:"edit-file"},"Edit file"),Object(n.b)("p",null,"Command : "),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{}),"    nano <fileName>\n          or\n    nano\n")),Object(n.b)("p",null,"Keyboard Shortcuts:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Save a file")),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{}),"    <Ctrl + o>\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Cut an an entire line"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  <Ctrl + k>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Select a particular string"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  1. <Alt + A> with the cursor at the beginning of the string ONCE\n  2. →/←/↑/↓ to select text\n  3. <Ctrl + k> to cut only the selected text this time\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Paste text"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  <Ctrl + u>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Search for a word"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  1. <Ctrl + w>\n  2. Enter the word which you want to search\n  3. Hit Enter and the tool will take you to the matched entry\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Replace a word"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  1. <Ctrl + \\>\n  2. Enter the word which you want to replace\n  3. Enter the replacement word\n  4. Press y/n repeatedly to confirm or not the changes in the whole document\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Insert another file into the current one"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  1. Move the cursor to the insert position\n  2. <Ctrl + R>\n  3. Give the path of the file\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Display the cursor position"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  <Ctrl + c>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Exit nano"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  <Ctrl + x>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Convert tabs into spaces"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  nano -E [filename]\n")))),Object(n.b)("h4",{id:"create-new-folder"},"Create New Folder"),Object(n.b)("p",null,"Command: "),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{}),"    mkdir <folder_name>\n")),Object(n.b)("p",null,"example create a folder named lesson:  mkdir lesson "),Object(n.b)("h2",{id:"git-version-control"},"Git version control"),Object(n.b)("h3",{id:"install"},"Install"),Object(n.b)("p",null,"In Linux debian based "),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{}),"    sudo apt install git\n")),Object(n.b)("h3",{id:"initialize-repository"},"Initialize repository"),Object(n.b)("p",null,"In the directory we want to track with git"),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{}),"    git init\n")),Object(n.b)("h3",{id:"configure-git"},"Configure git"),Object(n.b)("p",null,"##TODO Get info from ",Object(n.b)("a",r({parentName:"p"},{href:"https://alvinalexander.com/git/git-show-change-username-email-address"}),"https://alvinalexander.com/git/git-show-change-username-email-address")),Object(n.b)("p",null," git config "),Object(n.b)("h3",{id:"stage-changes"},"Stage changes"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Stage all changes in  ",Object(n.b)("inlineCode",{parentName:"p"},"<file>"),"  for the next commit."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  git add <file>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Stage all changes in  ",Object(n.b)("inlineCode",{parentName:"p"},"<directory>"),"  for the next commit."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  git add <directory>\n"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Begin an interactive staging session that lets you choose\nportions of a file to add to the next commit.\nThis will present you with a chunk of changes and prompt you\nfor a command. "),Object(n.b)("p",{parentName:"li"},"   Use ",Object(n.b)("strong",{parentName:"p"},"y")," to stage the chunk, ",Object(n.b)("strong",{parentName:"p"},"n")," to ignore the chunk,\n",Object(n.b)("strong",{parentName:"p"},"s")," to split it into smaller chunks,\n",Object(n.b)("strong",{parentName:"p"},"e")," to manually edit the chunk, and ",Object(n.b)("strong",{parentName:"p"},"q")," to exit."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"    git add -p\n")))),Object(n.b)("p",null,"Examples:"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Add all files in the packages/linux directory"),Object(n.b)("p",{parentName:"li"},"  git add packages/linux/*    ")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Add all files ending with  .js  in the packages/linux directory"),Object(n.b)("p",{parentName:"li"},"  git add packages/linux/*.js "))),Object(n.b)("h3",{id:"diff"},"diff"),Object(n.b)("h3",{id:"commit"},"commit"),Object(n.b)("h3",{id:"log"},"log"),Object(n.b)("h3",{id:"ignore"},"ignore"),Object(n.b)("h3",{id:"create-repo-on-github"},"Create repo on github"),Object(n.b)("h3",{id:"add-ssh-key"},"add ssh key"),Object(n.b)("h3",{id:"add-remote"},"add remote"),Object(n.b)("h3",{id:"push"},"push"),Object(n.b)("h3",{id:"pull"},"pull"),Object(n.b)("p",null,"Examples:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Fetch all Git branches"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),'  git branch -r | grep -v \'\\->\' | while read remote; do git branch --track "${remote#origin/}" "$remote"; done\n  git fetch --all\n  git pull --all\n')))),Object(n.b)("h3",{id:"branch"},"branch"),Object(n.b)("p",null,"To create and checkout a new branch "),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{}),"    git checkout -b new_branch_name\n")),Object(n.b)("h3",{id:"stash"},"stash"),Object(n.b)("h3",{id:"merge"},"merge"),Object(n.b)("p",null,"To merge from another branch"),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{}),"    git merge another_branch_name\n")),Object(n.b)("h3",{id:"resolve-conflicts"},"resolve conflicts"),Object(n.b)("h3",{id:"take-code-back-in-time-reset"},"Take code back in time (reset)"),Object(n.b)("p",null,"Examples:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Reset local repository branch to be just like remote repository"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",r({parentName:"pre"},{}),"  git fetch origin\n  git reset --hard origin/master\n")))),Object(n.b)("h2",{id:"project-folders-organizing"},"Project folders organizing"),Object(n.b)("h2",{id:"markdown"},"Markdown"),Object(n.b)("p",null,Object(n.b)("a",r({parentName:"p"},{href:"cheatsheets/markdown"}),"Cheatsheet")))}p&&p===Object(p)&&Object.isExtensible(p)&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/linux/index.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-linux-index-mdx-5bb3930ffe83558b1634.js.map