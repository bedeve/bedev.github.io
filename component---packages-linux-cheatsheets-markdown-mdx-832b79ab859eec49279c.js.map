{"version":3,"sources":["webpack:///../packages/linux/cheatsheets/markdown.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","lang","parentName","name","isMDXComponent"],"mappings":"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","file":"component---packages-linux-cheatsheets-markdown-mdx-832b79ab859eec49279c.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/vasilis/BeDeve/fullstack-development/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <pre lang=\"no-highlight\"><code>```javascript\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n```\n \n```python\ns = \"Python syntax highlighting\"\nprint s\n```\n \n```\nNo language indicated, so no syntax highlighting. \nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\n```\n      </code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var s = \"JavaScript syntax highlighting\";\nalert(s);\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`s = \"Python syntax highlighting\"\nprint s\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`No language indicated, so no syntax highlighting in Markdown Here (varies on Github). \nBut let's throw in a <b>tag</b>.\n`}</code></pre>\n    <a name=\"tables\" />\n    <h2 {...{\n      \"id\": \"tables\"\n    }}>{`Tables`}</h2>\n    <p>{`Tables aren't part of the core Markdown spec, but they are part of GFM and `}<em parentName=\"p\">{`Markdown Here`}</em>{` supports them. They are an easy way of adding tables to your email -- a task that would otherwise require copy-pasting from another application.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`Colons can be used to align columns.\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\nThere must be at least 3 dashes separating each header cell.\nThe outer pipes (|) are optional, and you don't need to make the \nraw Markdown line up prettily. You can also use inline Markdown.\n\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | \\`renders\\` | **nicely**\n1 | 2 | 3\n`}</code></pre>\n    <p>{`Colons can be used to align columns.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tables`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Are`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`Cool`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`col 3 is`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`right-aligned`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`$1600`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`col 2 is`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`centered`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`$12`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`zebra stripes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`are neat`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`$1`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Markdown`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Less`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pretty`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`Still`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`renders`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`nicely`}</strong></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`2`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`3`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <a name=\"blockquotes\" />\n    <h2 {...{\n      \"id\": \"blockquotes\"\n    }}>{`Blockquotes`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`> Blockquotes are very handy in email to emulate reply text.\n> This line is part of the same quote.\n\nQuote break.\n\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. \n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Blockquotes are very handy in email to emulate reply text.\nThis line is part of the same quote.`}</p>\n    </blockquote>\n    <p>{`Quote break.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can `}<em parentName=\"p\">{`put`}</em>{` `}<strong parentName=\"p\">{`Markdown`}</strong>{` into a blockquote. `}</p>\n    </blockquote>\n    <a name=\"html\" />\n    <h2 {...{\n      \"id\": \"inline-html\"\n    }}>{`Inline HTML`}</h2>\n    <p>{`You can also use raw HTML in your Markdown, and it'll mostly work pretty well. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`<dl>\n  <dt>Definition list</dt>\n  <dd>Is something people use sometimes.</dd>\n\n  <dt>Markdown in HTML</dt>\n  <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\n</dl>\n`}</code></pre>\n    <dl>\n  <dt>Definition list</dt>\n  <dd>Is something people use sometimes.</dd>\n  <dt>Markdown in HTML</dt>\n  <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\n    </dl>\n    <a name=\"hr\" />\n    <h2 {...{\n      \"id\": \"horizontal-rule\"\n    }}>{`Horizontal Rule`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`Three or more...\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n`}</code></pre>\n    <p>{`Three or more...`}</p>\n    <hr></hr>\n    <p>{`Hyphens`}</p>\n    <hr></hr>\n    <p>{`Asterisks`}</p>\n    <hr></hr>\n    <p>{`Underscores`}</p>\n    <a name=\"lines\" />\n    <h2 {...{\n      \"id\": \"line-breaks\"\n    }}>{`Line Breaks`}</h2>\n    <p>{`My basic recommendation for learning how line breaks work is to experiment and discover -- hit `}{`<`}{`Enter`}{`>`}{` once (i.e., insert one newline), then hit it twice (i.e., insert two newlines), see what happens. You'll soon learn to get what you want. \"Markdown Toggle\" is your friend. `}</p>\n    <p>{`Here are some things to try out:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Here's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\n`}</code></pre>\n    <p>{`Here's a line for us to start with.`}</p>\n    <p>{`This line is separated from the one above by two newlines, so it will be a `}<em parentName=\"p\">{`separate paragraph`}</em>{`.`}</p>\n    <p>{`This line is also begins a separate paragraph, but...`}<br parentName=\"p\"></br>{`\n`}{`This line is only separated by a single newline, so it's a separate line in the `}<em parentName=\"p\">{`same paragraph`}</em>{`.`}</p>\n    <p>{`(Technical note: `}<em parentName=\"p\">{`Markdown Here`}</em>{` uses GFM line breaks, so there's no need to use MD's two-space line breaks.)`}</p>\n    <a name=\"videos\" />\n    <h2 {...{\n      \"id\": \"youtube-videos\"\n    }}>{`YouTube Videos`}</h2>\n    <p>{`They can't be added directly but you can add an image with a link to the video like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=YOUTUBE_VIDEO_ID_HERE\n\" target=\"_blank\"><img src=\"http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg\" \nalt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /></a>\n`}</code></pre>\n    <p>{`Or, in pure Markdown, but losing the image sizing and border:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE)\n`}</code></pre>\n    <p>{`Referencing a bug by #bugID in your git commit links it to the slip. For example #1. `}</p>\n    <hr></hr>\n    <p>{`License: `}<a parentName=\"p\" {...{\n        \"href\": \"https://creativecommons.org/licenses/by/3.0/\"\n      }}>{`CC-BY`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}