(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{958:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return o}));n(12),n(4),n(5),n(3),n(7),n(6),n(8),n(1);var a=n(77),b=n(955);function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/linux/index.mdx"}});var r={_frontmatter:i},l=b.a;function o(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,b={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(b[n]=e[n]);return b}(e,["components"]);return Object(a.b)(l,c({},r,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"run-linux-through-a-usb-stick"},"Run linux through a usb stick"),Object(a.b)("h3",{id:"create-a-custom-image"},"Create a custom image"),Object(a.b)("p",null,"Cubic is a custom Ubuntu ISO creator. With it you can take a standard Ubuntu ISO image,\ninstall all the third-party software you need, and then create a custom, bootable\n(and installable) image from that."),Object(a.b)("p",null,Object(a.b)("a",c({parentName:"p"},{href:"linux/install#cubic"}),"Install")),Object(a.b)("h3",{id:"make-a-pestistent-linux-usb-stick"},"Make a pestistent linux usb stick"),Object(a.b)("p",null,Object(a.b)("a",c({parentName:"p"},{href:"linux/install#mksub"}),"Install mkusb")),Object(a.b)("h3",{id:"change-boot-order-in-bios"},"Change boot order in BIOS"),Object(a.b)("p",null,"uefi/legacy\nboot startup options"),Object(a.b)("h2",{id:"basic-commands"},"Basic commands"),Object(a.b)("h3",{id:"filesystem"},"Filesystem"),Object(a.b)("h3",{id:"terminal-keyboard-shortcuts"},"Terminal Keyboard Shortcuts"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"<Alt + . >: use the previous argument")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"<Ctrl + Shift + C>: copy the selected text")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"<Ctrl + Shift + V>: paste the clipboard text"))),Object(a.b)("h4",{id:"list-directory-contents"},"List directory contents"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"ls")),Object(a.b)("h4",{id:"change-directory"},"Change directory"),Object(a.b)("p",null,"Command : "),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{}),"cd <folder_name>\n")),Object(a.b)("p",null,"Examples:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"One folder back"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",c({parentName:"pre"},{}),"  cd ..\n"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Two folders back"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",c({parentName:"pre"},{}),"  cd ../..\n"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Previous directory"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",c({parentName:"pre"},{}),"  cd -\n"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"User root directory"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",c({parentName:"pre"},{}),"  cd ~\n")))),Object(a.b)("p",null,Object(a.b)("a",c({parentName:"p"},{href:"https://www.tecmint.com/cd-command-in-linux/"}),"More")),Object(a.b)("h4",{id:"create-new-file"},"Create new file"),Object(a.b)("p",null,"##TODO add info styled as cd / Copy the info from ",Object(a.b)("a",c({parentName:"p"},{href:"https://www.geeksforgeeks.org/touch-command-in-linux-with-examples/"}),"https://www.geeksforgeeks.org/touch-command-in-linux-with-examples/")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"touch  <fileName>")),Object(a.b)("p",null,"##Example with data from link"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Check whether a file is created or not. If not created then donâ€™t create it. This command avoids creating files."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",c({parentName:"pre"},{}),"  touch -c fileName\n")))),Object(a.b)("h4",{id:"edit-file"},"Edit file"),Object(a.b)("p",null,"##TODO add info styled as cd / Copy the info from ",Object(a.b)("a",c({parentName:"p"},{href:"https://www.howtoforge.com/linux-nano-command/"}),"https://www.howtoforge.com/linux-nano-command/")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"nano <fileName>")),Object(a.b)("p",null,"##Example with data from link"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Save a file"),Object(a.b)("p",{parentName:"li"},"To save a file, use the keyboard shortcut ",Object(a.b)("inlineCode",{parentName:"p"},"Ctrl+o")))),Object(a.b)("h4",{id:"create-new-folder"},"Create New Folder"),Object(a.b)("p",null,"##TODO style as cd\ncommand: ",Object(a.b)("inlineCode",{parentName:"p"},"mkdir <folder_name>")),Object(a.b)("p",null,"example create a folder named lesson: ",Object(a.b)("inlineCode",{parentName:"p"},"mkdir lesson")),Object(a.b)("h2",{id:"git-version-control"},"Git version control"),Object(a.b)("h3",{id:"install"},"Install"),Object(a.b)("p",null,"In Linux debian based "),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{}),"    sudo apt install git\n")),Object(a.b)("h3",{id:"initialize"},"Initialize"),Object(a.b)("p",null,"In the directory we want to track with git"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{}),"    git init\n")),Object(a.b)("h3",{id:"config"},"config"),Object(a.b)("p",null,"##TODO Get info from here ",Object(a.b)("a",c({parentName:"p"},{href:"https://alvinalexander.com/git/git-show-change-username-email-address"}),"https://alvinalexander.com/git/git-show-change-username-email-address"),"\n",Object(a.b)("inlineCode",{parentName:"p"},"git config")),Object(a.b)("h3",{id:"add-files-to-repository"},"Add files to repository"),Object(a.b)("p",null,"wildcard"),Object(a.b)("h3",{id:"diff"},"diff"),Object(a.b)("h3",{id:"commit"},"commit"),Object(a.b)("h3",{id:"log"},"log"),Object(a.b)("h3",{id:"ignore"},"ignore"),Object(a.b)("h3",{id:"create-repo-on-github"},"Create repo on github"),Object(a.b)("h3",{id:"add-ssh-key"},"add ssh key"),Object(a.b)("h3",{id:"add-remote"},"add remote"),Object(a.b)("h3",{id:"push"},"push"),Object(a.b)("h3",{id:"branch"},"branch"),Object(a.b)("p",null,"To create and checkout a new branch "),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-sh"}),"git checkout -b new_branch_name\n")),Object(a.b)("h3",{id:"stash"},"stash"),Object(a.b)("h3",{id:"merge"},"merge"),Object(a.b)("p",null,"To merge from another branch"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-sh"}),"git merge another_branch_name\n")),Object(a.b)("h3",{id:"resolve-conflicts"},"resolve conflicts"),Object(a.b)("h3",{id:"take-code-back-in-time-reset"},"Take code back in time (reset)"),Object(a.b)("h2",{id:"project-folders-organizing"},"Project folders organizing"),Object(a.b)("h2",{id:"markdown"},"Markdown"),Object(a.b)("p",null,Object(a.b)("a",c({parentName:"p"},{href:"cheatsheets/markdown"}),"Cheatsheet")))}o&&o===Object(o)&&Object.isExtensible(o)&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/linux/index.mdx"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-linux-index-mdx-a8054cf271454b8d1dd3.js.map