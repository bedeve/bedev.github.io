{"version":3,"sources":["webpack:///../packages/extensions/puppeteer-recorder/README.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mcAMO,IAAMA,EAAe,Q,iMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,yHACF,mBAAGC,WAAW,KAAQ,CAChB,KAAQ,8CADd,aADE,gCAGuD,mBAAGA,WAAW,KAAQ,CACzE,KAAQ,kGAD2C,mBAHvD,oEAOA,sBACE,kBAAIA,WAAW,MAAf,mCACA,kBAAIA,WAAW,MAAf,iEACA,kBAAIA,WAAW,MAAf,iCACA,kBAAIA,WAAW,MAAf,0CACA,kBAAIA,WAAW,MAAf,sBACA,kBAAIA,WAAW,MAAf,iCACA,kBAAIA,WAAW,MAAf,wDAEF,8BACE,iBAAGA,WAAW,cAAd,4CAAwE,0BAAYA,WAAW,KAAvB,2BAAxE,yGAEF,iBAAQ,CACN,GAAM,SADR,SAGA,sBACE,kBAAIA,WAAW,MAAf,kCACA,kBAAIA,WAAW,MAAf,OAA4B,8BAA5B,kCAAiF,0BAAYA,WAAW,MAAvB,SAAjF,aACA,kBAAIA,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,gDACA,kBAAIA,WAAW,MAAf,yGAEF,iBAAQ,CACN,GAAM,cADR,cAGA,8NACyE,mBAAGA,WAAW,KAAQ,CAC3F,KAAQ,sCAD6D,cADzE,uEAKA,iBAAQ,CACN,GAAM,eADR,eAGA,sBACE,kBAAIA,WAAW,MAAf,QAA6B,0BAAYA,WAAW,MAAvB,gEAC7B,kBAAIA,WAAW,MAAf,sBAA2C,0BAAYA,WAAW,MAAvB,kDAC3C,kBAAIA,WAAW,MAAf,mCACA,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,oCACA,kBAAIA,WAAW,MAAf,wDAEF,iBAAQ,CACN,GAAM,qBADR,qBAGA,sBACE,kBAAIA,WAAW,MAAf,oBAAyC,0BAAYA,WAAW,MAAvB,gBAAzC,QAA2G,0BAAYA,WAAW,MAAvB,kBAC3G,kBAAIA,WAAW,MAAf,uCAA4D,0BAAYA,WAAW,MAAvB,mBAC5D,kBAAIA,WAAW,MAAf,kBAAuC,0BAAYA,WAAW,MAAvB,qBAEzC,oDAAmC,sBAAQA,WAAW,KAAnB,QAAnC,+GAEA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wFAEL,iBAAQ,CACN,GAAM,uBADR,wBAGA,oGACF,mBAAGA,WAAW,KAAQ,CAChB,KAAQ,0CADd,YADE,QAG8B,mBAAGA,WAAW,KAAQ,CAChD,KAAQ,yCADkB,eAH9B,KAMA,iBAAQ,CACN,GAAM,WADR,WAGA,kC,wLAKJJ,EAAWK,gBAAiB","file":"component---packages-extensions-puppeteer-recorder-readme-md-1e69c4e9b726413d0031.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/vasilis/BeDeve/fullstack-development/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"puppeteer-recorder\"\n    }}>{`Puppeteer Recorder`}</h1>\n    <p>{`Puppeteer recorder is a Chrome extension that records your browser interactions and generates a\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/GoogleChrome/puppeteer\"\n      }}>{`Puppeteer`}</a>{` script. Install it from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://chrome.google.com/webstore/detail/puppeteer-recorder/djeegiggegleadkkbgopoonhjimgehda\"\n      }}>{`Chrome Webstore`}</a>{`.\nThis project is pretty fresh, but does the following already:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Records clicks and type events.`}</li>\n      <li parentName=\"ul\">{`Add waitForNavigation, setViewPort and other useful clauses. `}</li>\n      <li parentName=\"ul\">{`Generates a Puppeteer script.`}</li>\n      <li parentName=\"ul\">{`Shows which events are being recorded.`}</li>\n      <li parentName=\"ul\">{`Copy to clipboard.`}</li>\n      <li parentName=\"ul\">{`Offers configuration options.`}</li>\n      <li parentName=\"ul\">{`Allows data-id configuration for element selection.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: we only record certain events. See `}<inlineCode parentName=\"p\">{`dom-events-to-record.js`}</inlineCode>{` in the code-generator folder for which events. This collection will be expanded in future releases.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Click the icon and hit Record.`}</li>\n      <li parentName=\"ul\">{`Hit `}<kbd>{`tab`}</kbd>{` after you finish typing in an `}<inlineCode parentName=\"li\">{`input`}</inlineCode>{` element.`}</li>\n      <li parentName=\"ul\">{`Click links, inputs and other elements.`}</li>\n      <li parentName=\"ul\">{`Wait for full page load on each navigation. `}</li>\n      <li parentName=\"ul\">{`Click Pause when you want to navigate without recording anything. Hit Resume to continue recording. `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"background\"\n    }}>{`Background`}</h2>\n    <p>{`Writing Puppeteer scripts for scraping, testing and monitoring can be tricky. A recorder / code generator can be helpful,\neven if the code isn't perfect. This project builds on other projects (see `}<a parentName=\"p\" {...{\n        \"href\": \"#user-content-credits--disclaimer\"\n      }}>{`disclaimer`}</a>{`\nbelow) but adds extensibility, configurability and a smoother UI.`}</p>\n    <h2 {...{\n      \"id\": \"development\"\n    }}>{`Development`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Run: `}<inlineCode parentName=\"li\">{`git clone https://github.com/checkly/puppeteer-recorder.git`}</inlineCode></li>\n      <li parentName=\"ol\">{`Build the project: `}<inlineCode parentName=\"li\">{`cd puppeteer-recorder && npm i && npm run dev`}</inlineCode></li>\n      <li parentName=\"ol\">{`Navigate to chrome://extensions`}</li>\n      <li parentName=\"ol\">{`Make sure 'Developer mode' is checked`}</li>\n      <li parentName=\"ol\">{`Click Load unpacked extension...`}</li>\n      <li parentName=\"ol\">{`Browse to puppeteer-recorder/build and click Select`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"cutting-a-release\"\n    }}>{`Cutting a Release`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`bump versions in `}<inlineCode parentName=\"li\">{`package.json`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`manifest.json`}</inlineCode></li>\n      <li parentName=\"ul\">{`tag the code with the version, i.e. `}<inlineCode parentName=\"li\">{`git tag v0.4.0`}</inlineCode></li>\n      <li parentName=\"ul\">{`push with tags `}<inlineCode parentName=\"li\">{`git push --tags`}</inlineCode></li>\n    </ul>\n    <p>{`Now generate a release with `}<strong parentName=\"p\">{`gren`}</strong>{`. Make sure all issues associated with the new version are linked to a milestone\nwith the name of the tag.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`gren release --override --data-source=milestones --milestone-match=\"{{tag_name}}\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"credits--disclaimer\"\n    }}>{`Credits & disclaimer`}</h2>\n    <p>{`Puppeteer recorder is the spiritual successor & love child of segment.io's\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/segmentio/daydream\"\n      }}>{`Daydream`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/yguan/ui-recorder\"\n      }}>{`ui recorder`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"license\"\n    }}>{`License`}</h2>\n    <p>{`Apache 2`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}