{"version":3,"sources":["webpack:///../packages/extensions/puppeteer-recorder/PULL_REQUEST_TEMPLATE.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mcAMO,IAAMA,EAAe,Q,gNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,yBADR,yBAGA,iBAAQ,CACN,GAAM,eADR,eAGA,sKAC4B,mBAAGC,WAAW,KAAQ,CAC9C,KAAQ,8EADgB,2BAD5B,sFAKA,iBAAQ,CACN,GAAM,kBADR,kBAGA,qEACA,iBAAQ,CACN,UAAa,sBAEb,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,0DAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,kEAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,wGAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,oDAQF,iBAAQ,CACN,GAAM,4BADR,6BAGA,wFACA,iBAAQ,CACN,GAAM,aADR,cAGA,iBAAQ,CACN,UAAa,sBAEb,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,6DAM4E,0BAAYA,WAAW,MAAvB,gBAN5E,2BAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,8DAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,kFAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,iEAMgF,0BAAYA,WAAW,MAAvB,gBANhF,6B,uMAYNJ,EAAWK,gBAAiB","file":"component---packages-extensions-puppeteer-recorder-pull-request-template-md-12f043878d8c036fff40.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/vasilis/BeDeve/fullstack-development/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"pull-request-template\"\n    }}>{`Pull Request Template`}</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`Please include a summary of the change or which issue is fixed. Also, include relevant motivation and context.\nRemember, as mentioned in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/checkly/puppeteer-recorder/blob/master/CONTRIBUTING.md\"\n      }}>{`contribution guidelines`}</a>{` that\nPR's should be as atomic as possible 1 feature === 1 PR. 1 bugfix === 1 PR.`}</p>\n    <h2 {...{\n      \"id\": \"type-of-change\"\n    }}>{`Type of change`}</h2>\n    <p>{`Please delete options that are not relevant.`}</p>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Bug fix (non-breaking change which fixes an issue)`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`New feature (non-breaking change which adds functionality)`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Breaking change (fix or feature that would cause existing functionality to not work as expected)`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`This change requires a documentation update`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"how-has-this-been-tested\"\n    }}>{`How Has This Been Tested?`}</h2>\n    <p>{`Please describe the tests that you ran to verify your changes. `}</p>\n    <h2 {...{\n      \"id\": \"checklist\"\n    }}>{`Checklist:`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`My code follows the style guidelines of this project. `}<inlineCode parentName=\"li\">{`npm run lint`}</inlineCode>{` passes with no errors.`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`I have made corresponding changes to the documentation`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`I have added tests that prove my fix is effective or that my feature works`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`New and existing unit tests pass locally with my changes. `}<inlineCode parentName=\"li\">{`npm run test`}</inlineCode>{` passes with no errors.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}